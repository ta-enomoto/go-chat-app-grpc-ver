// Code generated by goa v3.4.3, DO NOT EDIT.
//
// chatapi gRPC client CLI support package
//
// Command:
// $ goa gen chat-api/design

package client

import (
	chatapi "chat-api/gen/chatapi"
	chatapipb "chat-api/gen/grpc/chatapi/pb"
	"encoding/json"
	"fmt"
)

// BuildGetchatPayload builds the payload for the chatapi getchat endpoint from
// CLI flags.
func BuildGetchatPayload(chatapiGetchatMessage string, chatapiGetchatKey string) (*chatapi.GetchatPayload, error) {
	var err error
	var message chatapipb.GetchatRequest
	{
		if chatapiGetchatMessage != "" {
			err = json.Unmarshal([]byte(chatapiGetchatMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"id\": 3009151431332760301\n   }'")
			}
		}
	}
	var key string
	{
		key = chatapiGetchatKey
	}
	v := &chatapi.GetchatPayload{
		ID: int(message.Id),
	}
	v.Key = key

	return v, nil
}

// BuildPostchatPayload builds the payload for the chatapi postchat endpoint
// from CLI flags.
func BuildPostchatPayload(chatapiPostchatMessage string, chatapiPostchatKey string) (*chatapi.PostchatPayload, error) {
	var err error
	var message chatapipb.PostchatRequest
	{
		if chatapiPostchatMessage != "" {
			err = json.Unmarshal([]byte(chatapiPostchatMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"Chat\": \"Aliquam dolor necessitatibus.\",\n      \"Cookie\": \"Quaerat est est aut.\",\n      \"Id\": \"Neque est.\",\n      \"Member\": \"Reiciendis quae reiciendis aperiam atque minus.\",\n      \"PostDt\": \"2000-03-10T00:55:40Z\",\n      \"RoomName\": \"Fugiat excepturi quo accusamus sed asperiores nihil.\",\n      \"UserId\": \"Saepe voluptas possimus voluptas.\"\n   }'")
			}
		}
	}
	var key string
	{
		key = chatapiPostchatKey
	}
	v := &chatapi.PostchatPayload{
		ID:       message.Id,
		UserID:   message.UserId,
		RoomName: message.RoomName,
		Member:   message.Member,
		Chat:     message.Chat,
		PostDt:   message.PostDt,
		Cookie:   message.Cookie,
	}
	v.Key = key

	return v, nil
}
