// Code generated by goa v3.4.3, DO NOT EDIT.
//
// chatapi HTTP server types
//
// Command:
// $ goa gen chat-api/design

package server

import (
	chatapi "chat-api/gen/chatapi"

	goa "goa.design/goa/v3/pkg"
)

// PostchatRequestBody is the type of the "chatapi" service "postchat" endpoint
// HTTP request body.
type PostchatRequestBody struct {
	// room id
	ID *string `form:"Id,omitempty" json:"Id,omitempty" xml:"Id,omitempty"`
	// user id
	UserID *string `form:"UserId,omitempty" json:"UserId,omitempty" xml:"UserId,omitempty"`
	// room name
	RoomName *string `form:"RoomName,omitempty" json:"RoomName,omitempty" xml:"RoomName,omitempty"`
	// member
	Member *string `form:"Member,omitempty" json:"Member,omitempty" xml:"Member,omitempty"`
	// chat
	Chat   *string `form:"Chat,omitempty" json:"Chat,omitempty" xml:"Chat,omitempty"`
	PostDt *string `form:"PostDt,omitempty" json:"PostDt,omitempty" xml:"PostDt,omitempty"`
	// cookie
	Cookie *string `form:"Cookie,omitempty" json:"Cookie,omitempty" xml:"Cookie,omitempty"`
}

// NewPostchatPayload builds a chatapi service postchat endpoint payload.
func NewPostchatPayload(body *PostchatRequestBody) *chatapi.PostchatPayload {
	v := &chatapi.PostchatPayload{
		ID:       *body.ID,
		UserID:   *body.UserID,
		RoomName: *body.RoomName,
		Member:   *body.Member,
		Chat:     *body.Chat,
		PostDt:   *body.PostDt,
		Cookie:   *body.Cookie,
	}

	return v
}

// ValidatePostchatRequestBody runs the validations defined on
// PostchatRequestBody
func ValidatePostchatRequestBody(body *PostchatRequestBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Id", "body"))
	}
	if body.UserID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("UserId", "body"))
	}
	if body.RoomName == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("RoomName", "body"))
	}
	if body.Member == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Member", "body"))
	}
	if body.Chat == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Chat", "body"))
	}
	if body.PostDt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("PostDt", "body"))
	}
	if body.Cookie == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Cookie", "body"))
	}
	if body.PostDt != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.PostDt", *body.PostDt, goa.FormatDateTime))
	}
	return
}
